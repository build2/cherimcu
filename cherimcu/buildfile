# Okay, now we want a library built from a couple of source files.
#
library{helpers}: objlib{foo}: c{foo.c}
library{helpers}: objlib{bar}: cxx{bar.cc}

# And a couple of isolated compartments. Real projects will have a load more
# of these.
#
compart{example}: objcom{example}: cxx{example.cc}
compart{example}: objcom{details}: cxx{details.cc}
objcom{example details}: compartment = example

compart{example2}: objcom{example2}: cxx{example2.cc}
compart{example2}: objcom{details2}: cxx{details2.cc}
objcom{example2 details2}: compartment = example2

# And now we want to assemble it into a firmware image, with a load of
# other metadata.
#
thread{example}:
{
  compartment          = [string] 'example'
  priority             = [uint64] 1
  entry_point          = [string] 'entry_point'
  stack_size           = [uint64] 0x400
  trusted_stack_frames = [uint64] 2
}

thread{example2}:
{
  compartment          = [string] 'example2'
  priority             = [uint64] 2
  entry_point          = [string] 'entry_point2'
  stack_size           = [uint64] 0x4000
  trusted_stack_frames = [uint64] 3
}

./: firmware{mydevice}: compart{example example2} \
                        library{helpers}          \
                        thread{example example2}

# The following version can be achieved by rewriting the link_* rules in C++.
#
# This version also shows a more canonical declaration order where we specify
# the ultimate target first (which automatically becomes the default target).
#
#\

firmware{mydevice}: thread{example example2}  \
                    compart{example example2} \
                    library{helpers}          \

thread{example}:
{
  compartment          = [string] 'example'
  priority             = [uint64] 1
  entry_point          = [string] 'entry_point'
  stack_size           = [uint64] 0x400
  trusted_stack_frames = [uint64] 2
}

thread{example2}:
{
  compartment          = [string] 'example2'
  priority             = [uint64] 2
  entry_point          = [string] 'entry_point2'
  stack_size           = [uint64] 0x4000
  trusted_stack_frames = [uint64] 3
}

compart{example}: cxx{example.cc details.cc}
compart{example2}: cxx{example2.cc details2.cc}

library{helpers}: c{foo.c} cxx{bar.cc}

#\
